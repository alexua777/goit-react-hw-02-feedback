{"version":3,"sources":["Components/FeedbackOptions.js","Components/Statisctics.js","Components/Section.js","App.js","index.js"],"names":["FeedbackOptions","onAddFeedback","type","onClick","Statistics","good","neutral","bad","total","positivePercentage","Section","title","children","clientFeedback","state","handleFeedback","feedback","setState","prevState","props","step","TotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Component","defaultProps","ReactDOM","render","document","getElementById"],"mappings":"kOAuBeA,EArBS,SAAC,GAAD,IACtBC,EADsB,EACtBA,cADsB,OAItB,oCAEE,iCACE,4BAAQC,KAAK,SAASC,QAAS,kBAAMF,EAAc,UAAnD,QAGA,4BAAQC,KAAK,SAASC,QAAS,kBAAMF,EAAc,aAAnD,WAGA,4BAAQC,KAAK,SAASC,QAAS,kBAAMF,EAAc,SAAnD,UCESG,EAfI,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAKC,EAAP,EAAOA,QAASC,EAAhB,EAAgBA,IAAKC,EAArB,EAAqBA,MAAOC,EAA5B,EAA4BA,mBAA5B,OACf,oCACA,0CACCD,IAAU,GACX,4BACE,oCAAUH,GACV,uCAAaC,GACb,mCAASC,GACT,qCAAWC,KACX,iDAAuBH,GAAQI,QCAtBC,EARC,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAOC,EAAT,EAASA,SAAT,OACZ,iCACG,4BAAKD,GACJC,ICAaC,E,2MACnBC,MAAQ,CACNT,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAKPQ,eAAiB,SAAAC,GACf,EAAKC,UAAS,SAACC,EAAWC,GACxB,OAAO,eACJH,EAAWE,EAAUF,GAAYG,EAAMC,U,EAK9CC,cAAgB,WACd,OAAO,EAAKP,MAAL,KAAqB,EAAKA,MAAL,QAAwB,EAAKA,MAAL,K,EAGtDQ,gCAAkC,WAChC,OACEC,KAAKC,MACF,EAAKV,MAAL,MACE,EAAKA,MAAL,KAAqB,EAAKA,MAAL,QAAwB,EAAKA,MAAL,KAC9C,KACA,M,wEAKN,OACE,6BACE,kBAAC,EAAD,CAASH,MAAO,yBACd,kBAAC,EAAD,CAAiBV,cAAewB,KAAKV,iBACrC,kBAAC,EAAD,CACEV,KAAMoB,KAAKX,MAAL,KACNR,QAASmB,KAAKX,MAAL,QACTP,IAAKkB,KAAKX,MAAL,IACLN,MAAOiB,KAAKJ,cACZZ,mBAAoBgB,KAAKH,wC,GAzCOI,aAAvBb,EAMZc,aAAe,CAAEP,KAAM,GCNhCQ,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.fd1be819.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst FeedbackOptions = ({\r\n  onAddFeedback,\r\n \r\n}) => (\r\n  <>\r\n   \r\n    <section>\r\n      <button type=\"button\" onClick={() => onAddFeedback(\"good\")}>\r\n        Good\r\n      </button>\r\n      <button type=\"button\" onClick={() => onAddFeedback(\"neutral\")}>\r\n        Neutral\r\n      </button>\r\n      <button type=\"button\" onClick={() => onAddFeedback(\"bad\")}>\r\n        Bad\r\n      </button>\r\n    </section>\r\n   \r\n  </>\r\n);\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\n\r\nconst Statistics = ({good,neutral, bad, total, positivePercentage}) => (\r\n    <>\r\n    <h3>Statistics</h3>\r\n    {total() > 0 && (\r\n    <ul>\r\n      <li>Good:{good}</li>\r\n      <li>Neutral:{neutral}</li>\r\n      <li>Bad:{bad}</li>\r\n      <li>Total:{total()}</li>\r\n      <li>Positive Feedback:{good && positivePercentage()}</li>\r\n    </ul>\r\n    )}\r\n    </>\r\n);\r\n\r\nexport default Statistics;","import React from 'react';\r\n\r\n\r\nconst Section = ({title, children}) => (\r\n    <section>\r\n       <h2>{title}</h2> \r\n       {children}\r\n    </section>\r\n     \r\n);\r\n\r\nexport default Section;","import React, { Component } from \"react\";\nimport FeedbackOptions from \"./Components/FeedbackOptions\";\nimport Statistics from \"./Components/Statisctics\";\nimport Section from \"./Components/Section\";\n\n\nexport default class clientFeedback extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0\n  };\n  static defaultProps = { step: 1 };\n  static propTypes = {};\n\n  handleFeedback = feedback => {\n    this.setState((prevState, props) => {\n      return {\n        [feedback]: prevState[feedback] + props.step\n      };\n    });\n  };\n\n  TotalFeedback = () => {\n    return this.state[\"good\"] + this.state[\"neutral\"] + this.state[\"bad\"];\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    return (\n      Math.round(\n        (this.state[\"good\"] /\n          (this.state[\"good\"] + this.state[\"neutral\"] + this.state[\"bad\"])) *\n          100\n      ) + \" %\"\n    );\n  };\n\n  render() {\n    return (\n      <div>\n        <Section title={\"Please leave feedback\"}>\n          <FeedbackOptions onAddFeedback={this.handleFeedback} />\n          <Statistics\n            good={this.state[\"good\"]}\n            neutral={this.state[\"neutral\"]}\n            bad={this.state[\"bad\"]}\n            total={this.TotalFeedback}\n            positivePercentage={this.countPositiveFeedbackPercentage}\n          />\n        </Section>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}